{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","window","setInterval","console","info","toUTCString","slice","setState","oldName","name","props","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","hasClock","clockName","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAEhCC,QAAQC,KAAK,EAAKR,MAAMC,KAAKQ,cAAcC,OAAO,IAAK,IACvD,IAAMT,EAAO,IAAIC,KAEjB,EAAKS,SAAS,CAAEV,WACf,OAdP,gCAiBE,SAAmBW,GACbA,EAAQC,OAAST,KAAKU,MAAMD,MAE9BN,QAAQQ,MAAR,uBAA8BH,EAAQC,KAAtC,eAAiDT,KAAKU,MAAMD,SApBlE,kCAwBE,WACEG,cAAcZ,KAAKD,WAzBvB,oBA4BE,WACE,IAAQF,EAASG,KAAKJ,MAAdC,KAER,OACE,sBAAKgB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGb,KAAKU,MAAMD,OAEb,YACD,sBAAMI,UAAU,cAAhB,SACGhB,EAAKQ,cAAcC,OAAO,IAAK,YAtC1C,GAA2BQ,aCN3B,SAASC,IACP,IAAMC,EAAQlB,KAAKmB,MAAMC,WAAWZ,OAAO,GAE3C,MAAM,SAAN,OAAgBU,GAQX,IAAMG,EAAb,4MACEvB,MAAQ,CACNwB,UAAU,EACVC,UAAW,WAHf,EAMEtB,QAAU,EANZ,uDAQE,WAAqB,IAAD,OAClBuB,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKlB,SAAS,CAAEa,UAAU,OAG5BE,SAASC,iBAAiB,SAAS,WACjC,EAAKhB,SAAS,CAAEa,UAAU,OAG5BpB,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKK,SAAS,CAAEc,UAAWN,QAC1B,QApBP,kCAuBE,WACEd,OAAOW,cAAcZ,KAAKD,WAxB9B,oBA2BE,WACE,MAAgCC,KAAKJ,MAA7BwB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKR,UAAU,MAAf,UACE,6CACCO,GAAY,cAAC,EAAD,CAAOX,KAAMY,WAjClC,GAAyBP,aCZzBY,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.e071c278.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  name: string,\n};\n\ntype State = {\n  date: Date,\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      // eslint-disable-next-line no-console\n      console.info(this.state.date.toUTCString().slice(-12, -4));\n      const date = new Date();\n\n      this.setState({ date });\n    }, 1000);\n  }\n\n  componentDidUpdate(oldName: Props) {\n    if (oldName.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${oldName.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { date } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.name}\n        </strong>\n        {' time is '}\n        <span className=\"Clock__time\">\n          {date.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}